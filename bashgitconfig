#!/bin/bash

# Function to print colored output
print_colored_output() {
    if [ "$1" == "success" ]; then
        echo -e "\e[32m$2\e[0m"  # Print in green (success)
    elif [ "$1" == "failure" ]; then
        echo -e "\e[31m$2\e[0m"  # Print in red (failure)
    else
        echo "$2"  # Print without color
    fi
}

read -p 'Username: ' username
read -p 'Email: ' email

git config --global user.name "$username"
if [ $? -eq 0 ]; then
    print_colored_output "success" "Git user.name set successfully"
else
    print_colored_output "failure" "Failed to set Git user.name"
fi

git config --global user.email "$email"
if [ $? -eq 0 ]; then
    print_colored_output "success" "Git user.email set successfully"
else
    print_colored_output "failure" "Failed to set Git user.email"
fi

git config --global color.ui true
if [ $? -eq 0 ]; then
    print_colored_output "success" "Git color.ui set to true"
else
    print_colored_output "failure" "Failed to set Git color.ui"
fi

git config --global core.editor emacs
if [ $? -eq 0 ]; then
    print_colored_output "success" "Git core.editor set to emacs"
else
    print_colored_output "failure" "Failed to set Git core.editor"
fi

ssh-keygen -t rsa -C "$email"
if [ $? -eq 0 ]; then
    print_colored_output "success" "SSH key generated successfully"
else
    print_colored_output "failure" "Failed to generate SSH key"
fi

cat /root/.ssh/id_rsa.pub

